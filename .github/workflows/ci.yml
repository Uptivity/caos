name: CI - Test and Lint

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '18'

jobs:
  test:
    name: Test and Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        working-directory: ./backend
        run: npm ci

      - name: Run tests with coverage
        working-directory: ./backend
        run: npm run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./backend/coverage/lcov.info
          flags: backend
          name: backend-coverage
        continue-on-error: true

      - name: Run linter
        working-directory: ./backend
        run: npm run lint

      - name: Security audit
        working-directory: ./backend
        run: npm audit --audit-level=moderate
        continue-on-error: true

  docker-build-test:
    name: Test Docker Build
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (test only)
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: false
          tags: caos-crm:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker health check
        run: |
          docker run -d --name caos-test -p 3001:3001 caos-crm:test
          sleep 10
          docker exec caos-test node backend/health-check.js || echo "Health check test completed"
          docker stop caos-test
          docker rm caos-test

  notify-status:
    name: CI Status
    runs-on: ubuntu-latest
    needs: [test, docker-build-test]
    if: always()

    steps:
      - name: Notify success
        if: success()
        run: |
          echo "✅ All CI checks passed! Ready for deployment."

      - name: Notify failure
        if: failure()
        run: |
          echo "❌ CI checks failed. Please review the errors above."
          exit 1